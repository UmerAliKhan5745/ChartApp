name: CI/CD Pipeline for MERN App

on:
  push:
    branches:
      - main # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install dependencies and build the frontend
      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm install --legacy-peer-deps
          npm run build

      # Install dependencies for the backend
      - name: Install and prepare backend
        working-directory: backend
        run: |
          npm install --legacy-peer-deps

      # Log in to DockerHub
      - name: Log in to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t umerali5745/mydockerhubuser:latest .
          docker push umerali5745/mydockerhubuser:latest

  deploy:
    needs: build # Ensure build step is successful before deploying
    runs-on: ubuntu-latest

    steps:
      # Connect to AWS EC2 using SSH and deploy the Docker container
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_HOST }} # EC2 Public IP or DNS
          username: ${{ secrets.AWS_USER }} # EC2 SSH Username (e.g., ec2-user or ubuntu)
          key: ${{ secrets.AWS_PRIVATE_KEY }} # EC2 Private Key (as GitHub secret)
          port: 22 # Default SSH port
          script: |
            # Pull the latest image from DockerHub
            docker pull umerali5745/mydockerhubuser:latest

            # Stop and remove any existing container with the same name
            docker stop mydockerhubuser || true
            docker rm mydockerhubuser || true

            # Run the container in detached mode, mapping port 5000
            docker run -d -p 5000:5000 --name mydockerhubuser umerali5745/mydockerhubuser:latest
