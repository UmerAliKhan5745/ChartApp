name: CI/CD Pipeline for MERN App

on:
  push:
    branches:
      - main # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install dependencies and build the frontend
      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm install --legacy-peer-deps
          npm run build

      # Install dependencies and build the backend
      - name: Install and prepare backend
        working-directory: backend
        run: |
          npm install --legacy-peer-deps

      # Print Docker credentials (for debugging purposes, remove after verification)
      - name: Print Docker credentials
        run: |
          echo "DOCKER_USERNAME: $DOCKER_USERNAME"
          echo "DOCKER_PASSWORD: $DOCKER_PASSWORD"

      # Log in to Docker Hub
      - name: Log in to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t umerali5745/mydockerhubuser:latest .
          docker push umerali5745/mydockerhubuser:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Check if the AWS private key is being passed correctly
      - name: Check if AWS_PRIVATE_KEY exists
        run: |
          if [ -z "${{ secrets.AWS_PRIVATE_KEY }}" ]; then
            echo "AWS_PRIVATE_KEY is not set!"
            exit 1
          else
            echo "AWS_PRIVATE_KEY is set."
          fi

      # Decode SSH Private Key
      - name: Decode SSH Private Key
        run: |
          echo "$AWS_PRIVATE_KEY" | base64 --decode > private_key.pem
          chmod 600 private_key.pem
          if [ -f "private_key.pem" ]; then
            echo "Private key successfully decoded and saved as private_key.pem"
          else
            echo "Private key decoding failed!"
            exit 1
          fi

      # Deploy to AWS EC2 using SSH
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_HOST }} # EC2 Public IP or DNS
          username: ${{ secrets.AWS_USER }} # EC2 SSH Username
          key: ./private_key.pem # Use the decoded private key
          port: 22 # Default SSH port
          script: |
            docker pull umerali5745/mydockerhubuser:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d -p 5000:5000 --name myapp umerali5745/mydockerhubuser:latest
